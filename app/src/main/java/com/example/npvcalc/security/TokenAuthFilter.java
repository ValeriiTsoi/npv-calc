package com.example.npvcalc.security; import com.example.npvcalc.service.*; import jakarta.servlet.*; import jakarta.servlet.http.*; import org.springframework.security.authentication.*; import org.springframework.security.core.context.*; import org.springframework.security.core.userdetails.*; import org.springframework.security.web.authentication.*; import org.springframework.stereotype.*; import org.springframework.web.filter.*; import java.io.*; import java.util.*; @Component public class TokenAuthFilter extends OncePerRequestFilter { private final AuthService authService; public TokenAuthFilter(AuthService a){this.authService=a;} @Override protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain chain) throws ServletException, IOException { String h=req.getHeader("Authorization"); if(h!=null && h.startsWith("Bearer ")){ String token=h.substring(7); Optional<String> u=authService.validate(token); if(u.isPresent()){ UsernamePasswordAuthenticationToken auth=new UsernamePasswordAuthenticationToken(new User(u.get(),"",java.util.Collections.emptyList()), null, java.util.Collections.emptyList()); auth.setDetails(new WebAuthenticationDetailsSource().buildDetails(req)); SecurityContextHolder.getContext().setAuthentication(auth); } } chain.doFilter(req,res);} }